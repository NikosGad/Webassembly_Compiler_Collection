version: "3"
services:
    ucrm_db:
        build:
            context: ./backend/database
            dockerfile: Dockerfile
        image: ucrm_db:${IMAGE_VERSION}
        container_name: ucrm_db
        user: postgres
        environment:
            - POSTGRES_PASSWORD=example
            - POSTGRES_USER=database
        volumes:
            - "${HOST_RESULTS_DIR_PREFIX}/wasmcc_volumes${ROOT_DB_DIR_TEST}:/var/lib/postgresql/data"
    rest_server:
        build: ./backend/rest_server
        image: rest_server:${IMAGE_VERSION}
        user: server
        container_name: wasmcc
        environment:
            - SYSTEM_IP=localhost
            - HOST_FRONTEND_ADDRESS=localhost:3535
            - UPLOAD_PATH_EMSCRIPTEN=${ROOT_RESULTS_DIR}/${EMSCRIPTEN}
            - UPLOAD_PATH_GOLANG=${ROOT_RESULTS_DIR}/${GOLANG}/src
            - GOOS=js
            - GOARCH=wasm
            - GOCACHE=${ROOT_RESULTS_DIR}/${GOLANG}/dev_tools/.cache/go-build
            - GOENV=${ROOT_RESULTS_DIR}/${GOLANG}/dev_tools/.config/go/env
            - GO_INSTALLATION_PATH=/usr/local/go/
            - POSTGRES_PASSWORD=example
            - POSTGRES_USER=database
            - JWT_SECRET_KEY=jwt_secret_key
        volumes:
            - "./backend/rest_server:/app"
            - "${HOST_RESULTS_DIR_PREFIX}/wasmcc_results${ROOT_RESULTS_DIR_TEST}:/results"
        command: bash -c "until python database_accepts_connections.py; do sleep 5; done; python3 /app/run_backend_tests.py"
        depends_on:
            - ucrm_db
